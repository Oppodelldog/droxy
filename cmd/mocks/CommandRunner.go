// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	exec "os/exec"

	mock "github.com/stretchr/testify/mock"
)

// CommandRunner is an autogenerated mock type for the CommandRunner type
type CommandRunner struct {
	mock.Mock
}

// RunCommand provides a mock function with given fields: cmd
func (_m *CommandRunner) RunCommand(cmd *exec.Cmd) error {
	ret := _m.Called(cmd)

	var r0 error
	if rf, ok := ret.Get(0).(func(*exec.Cmd) error); ok {
		r0 = rf(cmd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCommandRunner creates a new instance of CommandRunner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCommandRunner(t interface {
	mock.TestingT
	Cleanup(func())
}) *CommandRunner {
	mock := &CommandRunner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
